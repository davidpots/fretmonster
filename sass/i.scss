// From BASSCSS
@import "variables";
@import "reset";
@import "colors";
@import "spacing";
@import "type";
@import "positions";

// Fretboard

/* Scrollable overflowing tables, via http://www.maxdesign.com.au/2013/03/22/simple-responsive-table/ */

        /* Makes the table scrollable, if overflows */
         .fretboard_wrapper {
         	width: 100%;
         	overflow-y: auto;
         	_overflow: auto;
         	margin: 0 0 1em; 
           padding: 1em 1em 5em 1em; }
           
           // so the main fretboard is on same row as the string labels. Probably hacky but okay for now.
           .fretboard { position: absolute; left: 30px; }
         
         /* These next two lines add the scrollbar before you scroll (if overflow is present) */
          .table_wrapper::-webkit-scrollbar {
          	-webkit-appearance: none;
          	width: 14px;
          	height: 14px; }
          
          .table_wrapper::-webkit-scrollbar-thumb {
          	border-radius: 8px;
          	border: 3px solid #fff;
          	background-color: rgba(0, 0, 0, .3); }

table {
  border-collapse: collapse;
  border-spacing: 0;
}

td {
  padding: 0;
}

$cellWidth: $unit * 5;
$cellHeight: $unit * 3;
$dotSize: 2rem;
$stringWidth: 3px;

table.string_labels {
  float: left;
  .cell {
    height: $cellHeight;
    width: $cellWidth / 2;
    margin-bottom: $stringWidth;
    line-height: $cellHeight;
    top: $cellHeight / 2;
    color: #777;
    font-size: .9rem;
  }
}

.cell { 
  width: $cellWidth;
  height: $cellHeight;
}

.string { 
  border-bottom: $stringWidth solid #aaa; 
}

.fret--hasNote {}

.fret--open {
  border-right: 4px solid #aaa;
}

.fret--hasBG {
  background: #f3f3f3;
  border-right: 1px solid #ccc;
}

.fret--trailer {
  width: $unit * 1;
  border-right: none;
}

.fret--fretNum {
  text-align: center;
  line-height: $cellHeight * 1.8;
  color: #aaa;
  font-size: .9rem;
}

.string:first-child .fret {
  background: none;
  border-right-color: transparent;
  border-left-color: transparent;
}



.note { 
  height: $dotSize;
  width: $dotSize;
  border-radius: $dotSize / 2;
  top: $cellHeight / 2;
  line-height: $dotSize;
  margin-top: ($cellHeight - $dotSize) / 2; // Difference between the cell height + dot height, halved
  margin-left: $dotSize / -2; // shift it backwards half of the element's width
  left: 50%;
  background: orange;
  position: absolute;
  text-align: center;
  font-weight: bold;
  color: #fff;
  z-index: 1;
}

.note.highlight {
  background: black;
}

.active { background: yellow; }

.key_selector a { display: inline-block; padding: 5px; }
.scale_selector a { display: inline-block; padding: 5px; }